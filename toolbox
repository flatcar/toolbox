#!/bin/bash

set -e
set -o pipefail

machine=$(uname -m)

case ${machine} in
	arm)
		PLATFORM=linux/arm
		;;
	aarch64)
		PLATFORM=linux/arm64
		;;
	riscv64)
		PLATFORM=linux/riscv64
		;;
	x86)
		PLATFORM=linux/386
		;;
	x86_64)
		PLATFORM=linux/amd64
		;;
	*)
		echo "Warning: Unknown machine type ${machine}" >&2
		exit 1
		;;
esac

TOOLBOX_DOCKER_IMAGE=docker.io/library/fedora
TOOLBOX_DOCKER_TAG=latest
TOOLBOX_USER=root
TOOLBOX_DIRECTORY="/var/lib/toolbox"
TOOLBOX_BIND="--bind=/:/media/root --bind=/usr:/media/root/usr --bind=/run:/media/root/run --bind=/sys/fs/bpf:/sys/fs/bpf"
TOOLBOX_FLAGS="--system-call-filter=bpf"
# Ex: "--setenv=KEY=VALUE"
TOOLBOX_ENV=""

toolboxrc="${HOME}"/.toolboxrc

# System defaults
if [ -f "/etc/default/toolbox" ]; then
	source "/etc/default/toolbox"
fi

# User overrides
if [ -f "${toolboxrc}" ]; then
	source "${toolboxrc}"
fi

if [[ -n "${TOOLBOX_DOCKER_IMAGE}" ]] && [[ -n "${TOOLBOX_DOCKER_TAG}" ]]; then
	TOOLBOX_NAME=${TOOLBOX_DOCKER_IMAGE}-${TOOLBOX_DOCKER_TAG}
else
	echo "Error: Invalid Docker image name: '${TOOLBOX_DOCKER_IMAGE}:${TOOLBOX_DOCKER_TAG}'" >&2
	exit 1
fi

machinename=$(echo "${USER}-${TOOLBOX_NAME}" | sed -r 's/[^a-zA-Z0-9_.-]/_/g')
machinepath="${TOOLBOX_DIRECTORY}/${machinename}"
osrelease="${machinepath}/etc/os-release"

if [ ! -f "${osrelease}" ] || systemctl is-failed -q "${machinename}" ; then
	sudo mkdir -p "${machinepath}"
	sudo chown "${USER}:" "${machinepath}"

	if sudo -E ctr version &> /dev/null; then
		# Check if we already got our image, do not overwrite
		if ! sudo -E ctr images check | grep "${TOOLBOX_DOCKER_IMAGE}:${TOOLBOX_DOCKER_TAG}"; then
			sudo -E ctr images pull --platform ${PLATFORM} ${TOOLBOX_DOCKER_IMAGE}:${TOOLBOX_DOCKER_TAG}
		fi
		sudo ctr images mount --rw --platform ${PLATFORM} ${TOOLBOX_DOCKER_IMAGE}:${TOOLBOX_DOCKER_TAG} "${machinepath}"
		sudo ctr snapshots label "${machinepath}" containerd.io/gc.root=true
	elif sudo -E docker stats --no-stream &> /dev/null; then
		# Download and extract the image.
		sudo --preserve-env docker pull "${TOOLBOX_DOCKER_IMAGE}:${TOOLBOX_DOCKER_TAG}"
		dcid=$(sudo --preserve-env docker create "${TOOLBOX_DOCKER_IMAGE}:${TOOLBOX_DOCKER_TAG}")
		sudo --preserve-env docker export -o "${machinepath}/${dcid}.tar" ${dcid}
		sudo --preserve-env docker rm ${dcid}
		sudo --preserve-env docker rmi "${TOOLBOX_DOCKER_IMAGE}:${TOOLBOX_DOCKER_TAG}" || true
		sudo tar xvf "${machinepath}/${dcid}.tar" -C "${machinepath}"
		sudo rm -f "${machinepath}/${dcid}.tar"
	else
		echo "No supported container runtime found." >&2
		exit 2
	fi

	sudo touch "${osrelease}"
fi

# Special case for when SSH tries to pass a shell command with -c
if [ "x${1-}" == x-c ]; then
	set /bin/sh "$@"
fi

sudo SYSTEMD_NSPAWN_SHARE_SYSTEM=1 systemd-nspawn \
	--directory="${machinepath}" \
	--capability=all \
        ${TOOLBOX_FLAGS} \
        ${TOOLBOX_BIND} \
        ${TOOLBOX_ENV} \
	--user="${TOOLBOX_USER}" "$@"
